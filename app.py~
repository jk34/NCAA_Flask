from flask import Flask, render_template, json, request
#from dbconnect import connection
from wtforms import Form, BooleanField, TextField, PasswordField, validators
from passlib.hash import sha256_crypt
from MySQLdb import escape_string as thwart
import gc

app = Flask(__name__)


@app.route('/')
def main():
    return render_template('index.html')

@app.route("/tables")
def show_tables():
    data = subfile #contains predictions
    #teams = test_frame_model['Home_ID']
    #return render_template('index.html', teams=teams, titles = ['na', 'Female surfers', 'Male surfers'])
    return render_template('index.html')


@app.route('/showSignUp')
def showSignUp():
    return render_template('signup.html')


class RegistrationForm(Form):
    username = TextField('Username', [validators.Length(min=4, max=20)])
    email = TextField('Email Address', [validators.Length(min=6, max=50)])
    password = PasswordField('password', [validators.Required(),
					  validators.EqualTo('confirm', message="Passwords must match")])
    confirm = PasswordField('Repeat Password')

    accept_tos = BooleanField('I accept the Terms of Service and the Privacy NOtice')


@app.route('/signUp/',methods=['GET', 'POST'])
def signUp():
    try:
	form = RegistrationForm(request.form)

	if request.form=="POST" and form.validate():
	    username = form.username.data
	    email = form.email.data
	    password = sha256_crypt.encrypt((str(form.password.data)))
	    c, conn = connection()
	    x = c.execute("SELECT * FROM users WHERE username = (%s)", (thwart(username)))
	    #check if the inputted username exists or not
	    if int(len(x))>0:
		flash("that username is already taken. Choose another")    
		return render_template('signup.html', form=form)
	    else:
		#send user to "/introduction-to-python-programming/" after they register
		print "NEW USER"
		c.execute("INSERT INTO users (username, password, email, tracking) VALUES (%s, %s, %s, %s)", (thwart(username), thwart(password), thwart(email), thwart("/introduction-to-python-programming/")))
		conn.commit() #save changes to the MySQL database
		flash("thanks for registering!")
		c.close()
		conn.close()
		gc.collect() #garbage collector
		session['logged_in'] = True
		session['username'] = username

		return redirect(url_for('index'))
	
	return render_template("signup.html", form=form)


    except Exception as e:
	return str(e)

if __name__ == "__main__":
    app.run(port=5003, debug=True)
